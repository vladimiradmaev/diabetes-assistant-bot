package main

import (
	"fmt"
	"os"

	"github.com/joho/godotenv"
	"github.com/vladimiradmaev/diabetes-helper/internal/config"
)

func main() {
	fmt.Println("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")

	// –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ—Å—Ç—å
	if err := godotenv.Load(); err != nil {
		fmt.Printf("‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: %v\n", err)
	}

	// –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
	cfg, err := config.Load()
	if err != nil {
		fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:\n%v\n", err)
		os.Exit(1)
	}

	fmt.Println("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞!")
	fmt.Printf("üìã –î–µ—Ç–∞–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:\n")
	fmt.Printf("  - Telegram Token: %s\n", maskToken(cfg.TelegramToken))
	fmt.Printf("  - Gemini API Key: %s\n", maskToken(cfg.GeminiAPIKey))
	fmt.Printf("  - DB Host: %s\n", cfg.DB.Host)
	fmt.Printf("  - DB Port: %s\n", cfg.DB.Port)
	fmt.Printf("  - DB User: %s\n", cfg.DB.User)
	fmt.Printf("  - DB Name: %s\n", cfg.DB.DBName)
	fmt.Printf("  - Log Level: %v\n", cfg.Logger.Level)
	fmt.Printf("  - Log Output: %s\n", cfg.Logger.OutputPath)
	fmt.Printf("  - Log Format: %s\n", cfg.Logger.Format)
}

func maskToken(token string) string {
	if token == "" {
		return "<–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω>"
	}
	if len(token) <= 8 {
		return "***"
	}
	return token[:4] + "..." + token[len(token)-4:]
}
